{
	"info": {
		"_postman_id": "90ff8f9b-5661-4642-8b8b-84aa4b581706",
		"name": "Project API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Project Attachments",
			"item": [
				{
					"name": "bookmarks",
					"item": [
						{
							"name": " Create project without bookmarks",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"type\": \"generic\",\n        \"description\": \"test project\",\n        \"details\": {},\n        \"billingAccountId\": 123,\n        \"name\": \"test project1\"\n      }"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								}
							},
							"response": []
						},
						{
							"name": " Create project with valid bookmarks",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"type\": \"generic\",\n        \"description\": \"test project\",\n        \"details\": {},\n        \"bookmarks\":[{\n            \"title\":\"title1\",\n            \"address\":\"address1\"\n        },{\n            \"title\":\"title2\",\n            \"address\":\"address2\"\n        }],\n        \"billingAccountId\": 123,\n        \"name\": \"test project1\"\n      }"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								}
							},
							"response": []
						},
						{
							"name": " Create project with invalid bookmarks",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"type\": \"generic\",\n        \"description\": \"test project\",\n        \"details\": {},\n        \"bookmarks\":[{\n            \"title\":\"title1\",\n            \"invalid\":3,\n            \"address\":\"address1\"\n        },{\n            \"title\":\"title2\",\n            \"address\":\"address2\"\n        }],\n        \"billingAccountId\": 123,\n        \"name\": \"test project1\"\n      }"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "get  project",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update project with bookmarks",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"billingAccountId\": 9999, \n        \"name\": \"new project name\",\n         \"bookmarks\":[{\n            \"title\":\"title1\",\n            \"address\":\"address1\"\n        },{\n            \"title\":\"title2\",\n            \"address\":\"address2\"\n        }]\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete project all bookmarks null",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"billingAccountId\": 9999, \n        \"name\": \"new project name2\",\n         \"bookmarks\":null\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update  project with invalid bookmarks",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"billingAccountId\": 9999, \n        \"name\": \"new project name2\",\n         \"bookmarks\":3\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get projects with admin token",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Upload attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6547ada6-53f5-4e2d-bda0-f0ec5bfbe38f",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"attachmentId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"title\": \"first attachment submission\",\n\t\t\"filePath\": \"/home/phoenix/a.png\",\n\t\t\"s3Bucket\": \"topcoder-project-service\",\n\t\t\"contentType\": \"application/png\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments"
							]
						},
						"description": "Create an project attachment"
					},
					"response": []
				},
				{
					"name": "Update attachment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"title\": \"first attachment submission updated\",\n\t\t\"description\": \"updated project attachment\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments/{{attachmentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments",
								"{{attachmentId}}"
							]
						},
						"description": "Update project attachment"
					},
					"response": []
				},
				{
					"name": "Delete attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments/{{attachmentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments",
								"{{attachmentId}}"
							]
						},
						"description": "Delete a project attachment"
					},
					"response": []
				},
				{
					"name": "Download attachment",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments/{{attachmentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments",
								"{{attachmentId}}"
							]
						},
						"description": "Delete a project attachment"
					},
					"response": []
				},
				{
					"name": "List attachments",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments"
							]
						},
						"description": "Delete a project attachment"
					},
					"response": []
				}
			]
		},
		{
			"name": "Project With TemplateId issue",
			"item": [
				{
					"name": "Create project with templateId (not existed)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project with templateId\",\n\t\t\"description\": \"Hello I am a test project with templateId\",\n\t\t\"type\": \"generic\",\n\t\t\"templateId\": 3000\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project with templateId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed52d7f8-829b-40ec-8583-7e8dbcc6741c",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test project with templateId\",\n    \"description\": \"Hello I am a test project with templateId\",\n    \"type\": \"generic\",\n    \"templateId\": {{projectTemplateId}}\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Members",
			"item": [
				{
					"name": "Create project member with no payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "Request payload is mandatory while creating project. If no request payload is specified this should result in 400 status code."
					},
					"response": []
				},
				{
					"name": "Create project copilot with invalid userId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "Certain fields are mandatory while creating project. If invalid fields are specified this should result in 400 status code."
					},
					"response": []
				},
				{
					"name": "Create project copilot with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82218ddf-4bd4-485f-bcd4-1d653c674680",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"memberId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "If the request payload is valid, than project member should be created."
					},
					"response": []
				},
				{
					"name": "Create project member, if user already registered",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "If the request payload is valid and user is already registered with the specified role than this should result in 400."
					},
					"response": []
				},
				{
					"name": "Create project manager with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba7b3265-aaba-4cca-8a53-819c9e96cfae",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"memberId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"manager\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "If the request payload is valid, than project manager should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Create project customer with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87ab173c-8a4b-4d12-bfe7-ebcd272289f1",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"memberId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "If the request payload is valid, than project customer should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Update project member",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\",\n\t\"isPrimary\": true\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						},
						"description": "Update a project's member."
					},
					"response": []
				},
				{
					"name": "Update project member with isPrimary False",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\",\n\t\"isPrimary\": false\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						},
						"description": "Update a project's member."
					},
					"response": []
				},
				{
					"name": "wrong role",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\t\"role\": \"wrong\"\n } "
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List project members",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "List project members with roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members?role=customer",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							],
							"query": [
								{
									"key": "role",
									"value": "customer"
								}
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "Get project member",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						},
						"description": "Delete a project's member"
					},
					"response": []
				},
				{
					"name": "Delete project member Copy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						},
						"description": "Delete a project's member"
					},
					"response": []
				},
				{
					"name": "editing project member roles & primary option",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"role\": \"manager\",\n    \"isPrimary\": true\n } "
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Members Invites",
			"item": [
				{
					"name": "Create project member with no payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/invite",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"invite"
							]
						},
						"description": "Request payload is mandatory while creating project. If no request payload is specified this should result in 400 status code."
					},
					"response": []
				},
				{
					"name": "Create project customer with valid values",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"customer\",\n\t\"emails\": [\"test@topcoder.com\"]\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/invite",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"invite"
							]
						},
						"description": "If the request payload is valid, than project customer should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Get project member invite",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/invite",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"invite"
							]
						},
						"description": "Update a project's member."
					},
					"response": []
				},
				{
					"name": "Update project member invite",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"status\": \"accepted\",\n\t\"email\": \"test@topcoder.com\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/invite",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"invite"
							]
						},
						"description": "Update a project's member."
					},
					"response": []
				},
				{
					"name": "wrong status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\t\"status\": \"wrong\"\n } "
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/invite",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"invite"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "522949a9-3d94-4103-92b2-976af332f203",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "df2755ee-59a5-4d8d-a6ad-6416b697c894",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Create project without payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "Request body is mandatory while creating project. If invalid request body is supplied this should return 400 status code."
					},
					"response": []
				},
				{
					"name": "Create project without valid name",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "Certain fields are mandatory while creating project. If invalid request body is supplied this should return 400 status code."
					},
					"response": []
				},
				{
					"name": "Create project with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d951b47-5aac-4af6-a24b-ef6c998b913e",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project\",\n\t\"description\": \"Hello I am a test project\",\n\t\"type\": \"{{projectTypeId}}\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Create project by inactive user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer userId_{{inactive-userId}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project\",\n\t\"description\": \"Hello I am a test project\",\n\t\"type\": \"{{projectTypeId}}\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Get project by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Get a project by id. project members and attachments should also be returned."
					},
					"response": []
				},
				{
					"name": "Get project by id and request specific fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}?fields=id,name,description,members.id,members.projectId",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,name,description,members.id,members.projectId"
								}
							]
						},
						"description": "Get a project by id. project members and attachments should also be returned. Only those fields which are specified should be returned."
					},
					"response": []
				},
				{
					"name": "List projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "List projects with perPage and page",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects?perPage=1&page=1",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "perPage",
									"value": "1"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "List all the project with no filter. Limit of 1 and offset of 1 is applied"
					},
					"response": []
				},
				{
					"name": "List projects with type filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects?type=generic",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "type",
									"value": "generic"
								}
							]
						},
						"description": "List all the project with filters applied. The filter string should be url encoded. Default limit and offset is applicable"
					},
					"response": []
				},
				{
					"name": "List projects with id filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects?id=1&id=2",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "id",
									"value": "2"
								}
							]
						},
						"description": "List all the project with filters applied. The filter string should be url encoded. Default limit and offset is applicable"
					},
					"response": []
				},
				{
					"name": "List projects with sort applied",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects?sort=type asc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "sort",
									"value": "type asc"
								}
							]
						},
						"description": "List all the project with custom sort and no filter. Default sort and limits are applied. The sort string has to be url encoded. Sort is of type `key asc|desc`"
					},
					"response": []
				},
				{
					"name": "List projects and return specific fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects?fields=id,name,description",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,name,description"
								}
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied. The fields to return is specified as comma separated list. Only those fields should be returned."
					},
					"response": []
				},
				{
					"name": "List projects with copilot token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE project by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Delete a project by id"
					},
					"response": []
				},
				{
					"name": "Update project",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"project name updated\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project name. Name should be updated successfully."
					},
					"response": []
				},
				{
					"name": "Update project 403",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"project name updated\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project name. If user don't have permission to the project than it should return 403."
					},
					"response": []
				},
				{
					"name": "Update project 404",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"project name updated\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project name. If project is not found than this result in 404 status code."
					},
					"response": []
				},
				{
					"name": "Update project status to in review",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"in_review\"\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status."
					},
					"response": []
				},
				{
					"name": "Update project status to reviewed",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"reviewed\"\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status."
					},
					"response": []
				},
				{
					"name": "Update project status to paused",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"paused\"\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status."
					},
					"response": []
				},
				{
					"name": "Update project status to cancelled with cancelReason",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"cancelled\",\n    \"cancelReason\": \"price/cost\"\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status. While cancelling the project `cancelReason` is mandatory."
					},
					"response": []
				},
				{
					"name": "Update project status to cancelled",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"status\": \"cancelled\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status. While cancelling the project `cancelReason` is mandatory. If no `cancelReason` is supplied this should result in 400 status code."
					},
					"response": []
				},
				{
					"name": "Update project status to completed",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"completed\"\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status."
					},
					"response": []
				},
				{
					"name": "Move project out of cancel state.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"status\": \"active\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Move a project out of cancel state. Only admin and manager is allowed to do so."
					},
					"response": []
				},
				{
					"name": "Move project out of cancel state 403",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"status\": \"active\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Move a project out of cancel state. Only admin and manager is allowed to do so."
					},
					"response": []
				},
				{
					"name": "Update project details",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"details\": {\n      \"summary\": \"project name updated\"\n    }\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project details. This should fire specification modified event"
					},
					"response": []
				},
				{
					"name": "Update project bookmarks",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookmarks\": [\n      {\n        \"title\": \"test\",\n        \"address\": \"http://topcoder.com\"\n      }\n    \n    ]\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project bookmarks. This should fire project link created event"
					},
					"response": []
				},
				{
					"name": "launch a project by topcoder managers ",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"updatedProject name\",\n         \"status\": \"active\"\n    }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "launch a project by member",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"updatedProject name\",\n         \"status\": \"active\"\n    }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "launch a project by copilot",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"updatedProject name\",\n         \"status\": \"active\"\n    }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Requests for all things projects."
		},
		{
			"name": "EventHandling and Integration with Direct Project API",
			"item": [
				{
					"name": "mock direct projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.topcoder-dev.com/v3/direct/projects",
							"protocol": "https",
							"host": [
								"api",
								"topcoder-dev",
								"com"
							],
							"path": [
								"v3",
								"direct",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": " Create direct project when a new project is successfully created",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"type\": \"generic\",\n        \"description\": \"test project\",\n        \"details\": {},\n        \"billingAccountId\": 123,\n        \"name\": \"test project1\"\n      }"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Response error from direct project service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n        \"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": " Add co-pilot when a co-pilot is added to a project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove copilot from direct project when editing project member role",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"role\": \"customer\",\n    \"isPrimary\": true\n } "
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": " Sync billing account id with direct",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"billingAccountId\": 9999, \n        \"name\": \"new project name\"\n      }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete co-pilot when a co-pilot is removed from  a project",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ef96ac6a-0fc0-4a64-a4fe-5390e17afe67",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "12f9d794-0872-4058-aafa-77b89e72025b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Project Phase",
			"item": [
				{
					"name": "Create Phase",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7050133a-b934-4faf-8101-d2e80b5c0710",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"phaseId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"active\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t}\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Phase with order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f771afe-7b4e-4260-b04d-324e880eb61b",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"phaseId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"active\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t},\n\t\"order\": 1\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Phase with productTemplateId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8415ad98-b3f6-4330-88b6-e1830da2e4f9",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"phaseId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"active\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t},\n\t\"order\": 1,\n\t\"productTemplateId\": {{productTemplateId}}\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase with fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?fields=status,name,budget",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "fields",
									"value": "status,name,budget"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase with sort",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?sort=status desc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "sort",
									"value": "status desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase with sort by order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?sort=order desc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "sort",
									"value": "order desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Phase",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase xxx\",\n\t\"status\": \"inactive\",\n\t\"startDate\": \"2018-05-14T00:00:00\",\n\t\"endDate\": \"2018-05-15T00:00:00\",\n\t\"budget\": 30,\n\t\"progress\": 15,\n\t\"details\": {\n\t\t\"message\": \"phase details\"\n\t}\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase with order",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase xxx\",\n\t\"status\": \"inactive\",\n\t\"startDate\": \"2018-05-14T00:00:00\",\n\t\"endDate\": \"2018-05-15T00:00:00\",\n\t\"budget\": 30,\n\t\"progress\": 15,\n\t\"details\": {\n\t\t\"message\": \"phase details\"\n\t},\n\t\"order\": 1\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Phase",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Phase Products",
			"item": [
				{
					"name": "Create Phase Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77f089b3-cbe6-4fb4-b54f-2a52d138a050",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"phaseProductId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test phase product\",\n\t\"type\": \"type 1\",\n\t\"estimatedPrice\": 10\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Phase Product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products/{{phaseProductId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products",
								"{{phaseProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase Product",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test phase product xxx\",\n\t\"type\": \"type 2\",\n\t\"templateId\": 10,\n\t\"estimatedPrice\": 1.234567,\n\t\"actualPrice\": 2.34567,\n\t\"details\": {\n\t\t\"message\": \"this is a JSON type. You can use any json\"\n\t}\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products/{{phaseProductId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products",
								"{{phaseProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Phase Product",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products/{{phaseProductId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products",
								"{{phaseProductId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Templates",
			"item": [
				{
					"name": "Create project template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f79c07b-8076-4715-abf7-1d6903df444f",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"question\": \"question 1\",\r\n    \"info\": \"info 1\",\r\n    \"aliases\": [\"key-1\", \"key_1\"],\r\n    \"scope\":{\r\n      \"scope1\":\"scope 1\"\r\n    },\r\n    \"phases\":{\r\n      \"phase1\":\"phase 1\"\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project template with form, priceConfig, planConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c442ea3-0834-4a30-8044-a4e94fd4ea2d",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"question\": \"question 1\",\r\n    \"info\": \"info 1\",\r\n    \"aliases\": [\"key-1\", \"key_1\"],\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1\r\n    },\r\n    \"priceConfig\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1\r\n    },\r\n    \"planConfig\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project template with only form key",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d0ae3ca-fe2d-40eb-b5c8-9b03955babec",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"question\": \"question 1\",\r\n    \"info\": \"info 1\",\r\n    \"aliases\": [\"key-1\", \"key_1\"],\r\n    \"form\": {\r\n    \t\"key\": \"dev\"\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project template with wrong form key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"question\": \"question 1\",\r\n    \"info\": \"info 1\",\r\n    \"aliases\": [\"key-1\", \"key_1\"],\r\n    \"form\": {\r\n    \t\"key\": \"wrong-key\"\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project template with wrong model version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"question\": \"question 1\",\r\n    \"info\": \"info 1\",\r\n    \"aliases\": [\"key-1\", \"key_1\"],\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1123\r\n    },\r\n    \"priceConfig\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1123\r\n    },\r\n    \"planConfig\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1123\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "List project templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get project template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a project template with from, priceConfig, planConfig",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t \"version\": 2\r\n    },\r\n    \"priceConfig\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t \"version\": 1\r\n    },\r\n    \"planConfig\": {\r\n    \t\"key\": \"qa\",\t\r\n    \t \"version\": 2\t\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a project template with wrong model version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t \"version\": 1234\r\n    },\r\n    \"priceConfig\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t \"version\": 1234\r\n    },\r\n    \"planConfig\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t \"version\": 1234\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a project template without define form, priceConfig, planConfig",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project template",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"scope\":{\r\n      \"scope1\":\"scope 1\",\r\n      \"scope2\": [\"a\"]\r\n    },\r\n    \"phases\":{\r\n      \"phase1\":\"phase 1\",\r\n      \"phase2\": {\r\n    \t\"another\": \"another\"\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project template with define form, priceConfig, planConfig",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"form\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1\r\n    },\r\n    \"priceConfig\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1\r\n    },\r\n    \"planConfig\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project template with wrong form, priceConfig, planConfig",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n\t\"form\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1123\r\n    },\r\n    \"priceConfig\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1123\r\n    },\r\n    \"planConfig\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1123\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete project template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"new category\",\r\n    \"scope\":{\r\n      \"scope1\":\"scope 1\",\r\n      \"scope2\": [\"a\"]\r\n    },\r\n    \"phases\":{\r\n      \"phase1\":\"phase 1\",\r\n      \"phase2\": {\r\n    \t\"another\": \"another\"\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product Templates",
			"item": [
				{
					"name": "Create product template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5aaf185-6026-4b58-b9b8-56616109cd5a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"productTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name 1\",\r\n    \"productKey\": \"productKey 1\",\r\n    \"category\": \"{{productCategoryId}}\",\r\n    \"subCategory\": \"app\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"brief\": \"brief 1\",\r\n    \"details\": \"details 1\",\r\n    \"aliases\": [\"product key 1\", \"product_key_1\"],\r\n    \"template\": {\r\n      \"template1\": {\r\n        \"name\": \"template 1\",\r\n        \"details\": {\r\n          \"anyDetails\": \"any details 1\"\r\n        },\r\n        \"others\": [\"others 11\", \"others 12\"]\r\n      },\r\n      \"template2\": {\r\n        \"name\": \"template 2\",\r\n        \"details\": {\r\n          \"anyDetails\": \"any details 2\"\r\n        },\r\n        \"others\": [\"others 21\", \"others 22\"]\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product template with form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5a2af2e-97d2-415c-a533-1d52dd4003c7",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"productTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name 1\",\r\n    \"productKey\": \"productKey 1\",\r\n    \"category\": \"key1\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"brief\": \"brief 1\",\r\n    \"details\": \"details 1\",\r\n    \"aliases\": [\"product key 1\", \"product_key_1\"],\r\n    \"form\": {\r\n\t\t\"key\": \"dev\",\r\n\t\t\"version\": 1\r\n\t}\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product template with wrong form key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name 1\",\r\n    \"productKey\": \"productKey 1\",\r\n    \"category\": \"key1\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"brief\": \"brief 1\",\r\n    \"details\": \"details 1\",\r\n    \"aliases\": [\"product key 1\", \"product_key_1\"],\r\n    \"form\": {\r\n\t\t\"key\": \"wrong-key\"\r\n\t}\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product template with wrong model version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name 1\",\r\n    \"productKey\": \"productKey 1\",\r\n    \"category\": \"key1\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"brief\": \"brief 1\",\r\n    \"details\": \"details 1\",\r\n    \"aliases\": [\"product key 1\", \"product_key_1\"],\r\n    \"form\": {\r\n\t\t\"key\": \"dev\",\r\n\t\t\"version\": 1123\r\n\t}\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "List product templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get product template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update product template",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"productKey\":\"new productKey\",\r\n    \"category\":\"key1\",\r\n    \"icon\":\"http://example.com/icon-new.ico\",\r\n    \"brief\": \"new brief\",\r\n    \"details\": \"new details\",\r\n    \"aliases\":{\r\n      \"alias1\":\"scope 1\",\r\n      \"alias2\": [\"a\"]\r\n    },\r\n    \"template\":{\r\n      \"template1\":\"template 1\",\r\n      \"template2\": {\r\n    \t\"another\": \"another\"\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a product template with form",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t\"version\": 2\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a product template with wrong model version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t\"version\": 1234\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a product template without define form",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Type",
			"item": [
				{
					"name": "Create project type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fbc45946-a3f2-433a-8ec5-0af82b69d2bd",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectTypeId\", pm.response.json().key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"key\": \"new key\",\r\n        \"displayName\": \"new displayName\",\r\n        \"icon\": \"http://example.com/icon4.ico\",\r\n    \t\"question\": \"question 4\",\r\n    \t\"info\": \"info 4\",\r\n    \t\"aliases\": [\"key-41\", \"key_42\"],\r\n    \t\"metadata\": {}\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTypes",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "List project types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTypes",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get project type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTypes/{{projectTypeId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTypes",
								"{{projectTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project type",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"displayName\": \"Chatbot-updated\"\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTypes/{{projectTypeId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTypes",
								"{{projectTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete project type",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTypes/{{projectTypeId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTypes",
								"{{projectTypeId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product Category",
			"item": [
				{
					"name": "Create product category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06156797-ceb2-4f8c-9448-5c453adb7b7a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"productCategoryId\", pm.response.json().key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"key\": \"generic\",\r\n        \"displayName\": \"new displayName\",\r\n        \"icon\": \"icon\",\r\n        \"question\": \"question\",\r\n        \"info\": \"info\",\r\n        \"aliases\": [\"key-1\", \"key-2\"]\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productCategories",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "List product categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/productCategories",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get product category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/productCategories/{{productCategoryId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productCategories",
								"{{productCategoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update product category",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"displayName\": \"Chatbot-updated\"\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productCategories/{{productCategoryId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productCategories",
								"{{productCategoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product category",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"new category\",\r\n    \"scope\":{\r\n      \"scope1\":\"scope 1\",\r\n      \"scope2\": [\"a\"]\r\n    },\r\n    \"phases\":{\r\n      \"phase1\":\"phase 1\",\r\n      \"phase2\": {\r\n    \t\"another\": \"another\"\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productCategories/{{productCategoryId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productCategories",
								"{{productCategoryId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJhZG1pbmlzdHJhdG9yIl0sImlzcyI6Imh0dHBzOi8vYXBpLnRvcGNvZGVyLWRldi5jb20iLCJoYW5kbGUiOiJwc2hhaDEiLCJleHAiOjI0NjI0OTQ2MTgsInVzZXJJZCI6IjQwMTM1OTc4IiwiaWF0IjoxNDYyNDk0MDE4LCJlbWFpbCI6InBzaGFoMUB0ZXN0LmNvbSIsImp0aSI6ImY0ZTFhNTE0LTg5ODAtNDY0MC04ZWM1LWUzNmUzMWE3ZTg0OSJ9.XuNN7tpMOXvBG1QwWRQROj7NfuUbqhkjwn39Vy4tR5I",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f0092ef5-e624-4c25-87b2-b6a9e4c81ec8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9183c429-a5e0-4bf9-96a2-89f4d66e9b0d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Project upgrade",
			"item": [
				{
					"name": "Migrate project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"targetVersion\": \"v3\",\n\t\t\"defaultProductTemplateId\": 3\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Migrate project (completed)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"targetVersion\": \"v3\",\n\t\t\"defaultProductTemplateId\": 3\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Migrate project with phase name",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"targetVersion\": \"v3\",\n\t\t\"defaultProductTemplateId\": 3,\n\t\t\"phaseName\": \"Custom phase name\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Migrate project with phase name (completed)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"targetVersion\": \"v3\",\n\t\t\"defaultProductTemplateId\": 3,\n\t\t\"phaseName\": \"Custom phase name\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"upgrade"
							]
						}
					},
					"response": []
				}
			],
			"description": "Request to migrate projects."
		},
		{
			"name": "Timeline",
			"item": [
				{
					"name": "Create timeline",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c066e7d4-537f-406e-a768-ec4bf73a2634",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"timelineId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-connectAdmin-40051336}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\":\"new name\",\r\n\t\"description\":\"new description\",\r\n\t\"startDate\":\"2018-05-29T00:00:00.000Z\",\r\n\t\"endDate\": \"2018-05-30T00:00:00.000Z\",\r\n\t\"reference\": \"project\",\r\n\t\"referenceId\": {{projectId}}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create timeline with templateId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee729ed9-0072-4821-9141-3615ff66f728",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"timelineId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-connectAdmin-40051336}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"description\":\"new description\",\r\n    \"startDate\":\"2018-05-29T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-30T00:00:00.000Z\",\r\n    \"reference\": \"project\",\r\n    \"referenceId\": 1,\r\n    \"templateId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create timeline with invalid data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-connectAdmin-40051336}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startDate\":\"2018-05-29T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-28T00:00:00.000Z\",\r\n    \"reference\": \"invalid\",\r\n    \"referenceId\": 0\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines"
							]
						}
					},
					"response": []
				},
				{
					"name": "List timelines (filter by reference and referenceId)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines?reference=project&referenceId={{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines"
							],
							"query": [
								{
									"key": "reference",
									"value": "project"
								},
								{
									"key": "referenceId",
									"value": "{{projectId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get timeline",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update timeline",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"timeline 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"startDate\": \"2018-05-01T00:00:00.000Z\",\r\n    \"endDate\": null,\r\n    \"reference\": \"project\",\r\n    \"referenceId\": {{projectId}}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update timeline (startDate)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"timeline 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"startDate\": \"2018-05-05T00:00:00.000Z\",\r\n    \"reference\": \"project\",\r\n    \"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update timeline (endDate)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"timeline 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"startDate\": \"2018-05-04T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-05T00:00:00.000Z\",\r\n    \"reference\": \"project\",\r\n    \"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete timeline",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Milestone",
			"item": [
				{
					"name": "Create milestone",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8fd1d5e9-8e6e-4cd7-9010-b855308be069",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"milestoneId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 3\",\r\n    \"description\": \"description 3\",\r\n    \"duration\": 4,\r\n    \"startDate\": \"2018-05-29T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-30T00:00:00.000Z\",\r\n    \"completionDate\": \"2018-05-31T00:00:00.000Z\",\r\n    \"status\": \"open\",\r\n    \"type\": \"type3\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            2,\r\n            3,\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 3\",\r\n    \"activeText\": \"activeText 3\",\r\n    \"completedText\": \"completedText 3\",\r\n    \"blockedText\": \"blockedText 3\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create milestone with invalid data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-member-40051331}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startDate\": \"2018-05-05T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-04T00:00:00.000Z\",\r\n    \"completionDate\": \"2018-05-04T00:00:00.000Z\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones"
							]
						}
					},
					"response": []
				},
				{
					"name": "List milestones",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones"
							]
						}
					},
					"response": []
				},
				{
					"name": "List milestones (sort)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones?sort=order desc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones"
							],
							"query": [
								{
									"key": "sort",
									"value": "order desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get milestone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-09-28T00:00:00.000Z\",\r\n    \"status\": \"closed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (active)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 2-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-10-28T00:00:00.000Z\",\r\n    \"status\": \"active\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (completed)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 2-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-10-28T00:00:00.000Z\",\r\n    \"status\": \"completed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 1 => 2)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-05-07T00:00:00.000Z\",\r\n    \"status\": \"closed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 2,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 2 => 1)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-05-07T00:00:00.000Z\",\r\n    \"status\": \"closed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 1 => 3)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-05-07T00:00:00.000Z\",\r\n    \"status\": \"closed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 3,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 3 => 1)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-05-07T00:00:00.000Z\",\r\n    \"status\": \"closed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete milestone",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Milestone Template",
			"item": [
				{
					"name": "Create milestone template",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3dbf8b29-2498-4b05-93de-14d809ccc285",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"milestoneTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestoneTemplate 1\",\r\n    \"description\": \"description 1\",\r\n    \"duration\": 11,\r\n    \"type\": \"type3\",\r\n    \"order\": 1,\r\n    \"activeText\": \"activeText 1\",\r\n    \"completedText\": \"completedText 1\",\r\n    \"blockedText\": \"blockedText 1\",\r\n    \"plannedText\": \"planned Text 1\",\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": {{productTemplateId}},\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create milestone template with invalid referenceId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestoneTemplate 3\",\r\n    \"description\": \"description 3\",\r\n    \"duration\": 33,\r\n    \"type\": \"type3\",\r\n    \"order\": 1,\r\n    \"activeText\": \"activeText 1\",\r\n    \"completedText\": \"completedText 1\",\r\n    \"blockedText\": \"blockedText 1\",\r\n    \"plannedText\": \"planned Text 1\",\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1000,\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create milestone template with invalid data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone milestone template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"sourceReference\": \"productTemplate\",\r\n    \"sourceReferenceId\": 1,\r\n    \"reference\": \"productTemplate\",\r\n    \"referenceId\": 2\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/clone",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"clone"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone milestone template with invalid referenceId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sourceReference\": \"productTemplate\",\r\n    \"sourceReferenceId\": 1,\r\n    \"reference\": \"productTemplate\",\r\n    \"referenceId\": 2000\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/clone",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"clone"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone milestone template with invalid sourceReferenceId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sourceReference\": \"productTemplate\",\r\n    \"sourceReferenceId\": 1000,\r\n    \"reference\": \"productTemplate\",\r\n    \"referenceId\": 2\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/clone",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"clone"
							]
						}
					},
					"response": []
				},
				{
					"name": "List milestone templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "List milestone templates (filter)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates?reference=productTemplate&referenceId={{productTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							],
							"query": [
								{
									"key": "reference",
									"value": "productTemplate"
								},
								{
									"key": "referenceId",
									"value": "{{productTemplateId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List milestone templates (sort)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates?reference=productTemplate&referenceId={{productTemplateId}}&sort=order desc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							],
							"query": [
								{
									"key": "reference",
									"value": "productTemplate"
								},
								{
									"key": "referenceId",
									"value": "{{productTemplateId}}"
								},
								{
									"key": "sort",
									"value": "order desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get milestone template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"milestoneTemplate 1-updated\",\r\n\t\"description\": \"description 1-updated\",\r\n\t\"duration\": 34,\r\n\t\"type\": \"type1-updated\",\r\n\t\"order\": 1,\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 1 => 2)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"milestoneTemplate 1-updated\",\r\n  \"description\": \"description 1-updated\",\r\n  \"duration\": 34,\r\n  \"type\": \"type1-updated\",\r\n  \"order\": 2,\r\n  \"reference\": \"productTemplate\",\r\n  \"referenceId\": {{productTemplateId}}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 2 => 1)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"milestoneTemplate 1-updated\",\r\n\t\"description\": \"description 1-updated\",\r\n\t\"duration\": 34,\r\n\t\"type\": \"type1-updated\",\r\n\t\"order\": 1,\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 1 => 3)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"milestoneTemplate 1-updated\",\r\n  \"description\": \"description 1-updated\",\r\n  \"duration\": 34,\r\n  \"type\": \"type1-updated\",\r\n  \"order\": 3,\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 3 => 1)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"milestoneTemplate 1-updated\",\r\n  \"description\": \"description 1-updated\",\r\n  \"duration\": 34,\r\n  \"type\": \"type1-updated\",\r\n  \"order\": 1,\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone with metadata",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"milestoneTemplate 5-updated\",\r\n\t\"description\": \"description 5-updated\",\r\n\t\"duration\": 34,\r\n\t\"type\": \"type5-updated\",\r\n\t\"order\": 5,\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1,\r\n\t\"metadata\": {\r\n        \"metadata1\": {\r\n          \"name\": \"metadata 1 - update\",\r\n          \"details\": {\r\n            \"anyDetails\": \"any details 1 - update\",\r\n            \"newDetails\": \"new\"\r\n          },\r\n          \"others\": [\"others new\"]\r\n        },\r\n        \"metadata3\": {\r\n          \"name\": \"metadata 3\",\r\n          \"details\": {\r\n            \"anyDetails\": \"any details 3\"\r\n          },\r\n          \"others\": [\"others 31\", \"others 32\"]\r\n        }\r\n      }\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete milestone",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Metadata",
			"item": [
				{
					"name": "Get all metadata",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all metadata with includeAllVersion",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata?includeAllReferred=true",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata"
							],
							"query": [
								{
									"key": "includeAllReferred",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Form Version",
			"item": [
				{
					"name": "List forms",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get latest version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94f6be66-34cc-40c8-80c2-b27dd93ed527",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"formKey\", pm.response.json().key);",
									"    pm.environment.set(\"formVersion\", pm.response.json().version);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/dev/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"dev",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update form",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test111\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete form",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Form Revision",
			"item": [
				{
					"name": "List all revision for version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}/revisions/{{formRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}",
								"revisions",
								"{{formRevision}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dbe5ec9f-022c-4ec5-b58c-d19c15430b61",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"formRevision\", pm.response.json().revision);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create for no exist key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/no-exist-2222key36/versions/1/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"no-exist-2222key36",
								"versions",
								"1",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}/revisions/{{formRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}",
								"revisions",
								"{{formRevision}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Price Config Version",
			"item": [
				{
					"name": "List price configs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/dev/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"dev",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get latest version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create priceConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e440c87c-49ff-4443-b9bf-b44d4e9a480f",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"priceKey\", pm.response.json().key);",
									"    pm.environment.set(\"priceVersion\", pm.response.json().version);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/dev/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"dev",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update priceConfig",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test111\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete priceConfig",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59182724-4332-4d76-90ea-f7520a7b1be9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "abc13dca-e8a4-4995-970f-00e5889a5f2d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Price Config Revision",
			"item": [
				{
					"name": "List all revision for version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/dev/versions/3/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"dev",
								"versions",
								"3",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}/revisions/{{priceRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}",
								"revisions",
								"{{priceRevision}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create price config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d53ed608-b21c-4d6f-bb68-c2beda1d631d",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"priceRevision\", pm.response.json().revision);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create for no exist key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/no-exist-key/versions/1/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"no-exist-key",
								"versions",
								"1",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}/revisions/{{priceRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}",
								"revisions",
								"{{priceRevision}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plan Config Version",
			"item": [
				{
					"name": "List plan configs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/dev/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"dev",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get latest version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create plan config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97bc350a-0c4f-46a6-a315-a62b203b3ad2",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"planKey\", pm.response.json().key);",
									"    pm.environment.set(\"planVersion\", pm.response.json().version);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/dev/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"dev",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update plan config",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test111\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete plan config",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plan Config Revision",
			"item": [
				{
					"name": "List all revision for version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}/revisions/{{planRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}",
								"revisions",
								"{{planRevision}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create plan config",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5373f1f-4beb-46f9-8538-10c938c204ba",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"planRevision\", pm.response.json().revision);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create for no exist key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/no-exist-key/versions/1/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"no-exist-key",
								"versions",
								"1",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}/revisions/{{planRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}",
								"revisions",
								"{{planRevision}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
